{"version":3,"sources":["data/logo.png","components/Header.js","components/Gathering.js","components/Crafting.js","components/About.js","components/NotFound.js","components/Item.js","components/Context/index.js","components/ItemList.js","components/Loading.js","components/Marketboard.js","components/App.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","src","logo","alt","react_router_dom","exact","to","Gathering","props","title","Crafting","About","NotFound","PureComponent","AppContext","React","createContext","Provider","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","data","items","loadPercent","loadIncrementAmount","pageNumber","pageTotal","loadedPages","tick","FetchNextPage","setState","prevState","clearInterval","intervalID","inherits","createClass","key","value","console","log","FetchInitial","itemIDs","url","_this2","getItemIdUrl","fetch","mode","then","response","json","Pagination","Page","Results","map","i","ID","toString","PageTotal","oneWeekAgo","Date","setDate","getDate","Goblin","objectSpread","MinPrice","Prices","reduce","prev","current","PricePerUnit","MinPriceQuantity","Quantity","LastWeekGil","History","filter","d","PurchaseDateMS","item","PriceTotal","next","LastWeekTransactions","LastWeekQuantity","setInterval","_this3","toConsumableArray","actions","children","Component","Consumer","ItemList","context","columns","accessor","headerClassName","sortable","filterable","filterMethod","row","id","toUpperCase","includes","Cell","Intl","NumberFormat","format","parseInt","es","Loading","lib_default","size","spinnerColor","spinnerWidth","visible","toFixed","Marketboard","handleSubmit","e","preventDefault","name","topic","page","Loading_Loading","components_ItemList","App","components_Header","react_router","path","render","components_Marketboard","components_Gathering","component","ReactDOM","Context_Provider","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.1ea91cf2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.1d985892.png\";","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport logo from '../data/logo.png'\r\n\r\nconst Header = () => (\r\n  <header className=\"main-header\">\r\n    <img src={logo} alt=\"FFXIV Fan Page\"></img>\r\n    <ul className=\"main-nav\">\r\n      <li><NavLink exact to=\"/\">Marketboard</NavLink></li>\r\n      <li><NavLink to=\"/gathering\">Gathering</NavLink></li>\r\n      <li><NavLink to=\"/crafting\">Crafting</NavLink></li>\r\n      <li><NavLink to=\"/about\">About</NavLink></li>\r\n    </ul>    \r\n  </header>\r\n);\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst Gathering = (props) => (\r\n  <div className=\"main-content\">\r\n    <h2>{props.title}</h2>\r\n    <p>Coming Soon</p>\r\n  </div>\r\n);\r\n\r\nexport default Gathering;","import React from 'react';\r\n\r\n  \r\n\r\nconst Crafting = () => {\r\n  \r\n  return (\r\n    <p>coming soon</p>\r\n  );\r\n}\r\n\r\nexport default Crafting;","import React from 'react';\r\n\r\nconst About = () => {\r\n\r\n  return (\r\n    <div className=\"main-content\">\r\n      <h2>About</h2>\r\n      <p>Jsut a dude working on this in spare time</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;","import React from 'react';\r\n\r\nconst NotFound = () => (\r\n  <div className=\"main-content not-found\">\r\n    <i className=\"material-icons icn-error\">error_outline</i>\r\n    <h2>Page Not Found</h2>\r\n  </div>\r\n);\r\n\r\nexport default NotFound;","import React, { PureComponent } from 'react';\r\n\r\nclass Item extends PureComponent {\r\n\r\n    render() {\r\n        return (\r\n            <tr className=\"tab\">\r\n                <td>{this.props.item.Item.Name}</td>\r\n                <td>{(this.props.item.MinPrice ===100) ? '100+' \r\n                : this.props.item.MinPrice }</td>\r\n                <td>{(this.props.item.MinPriceQuantity ===100) ? '100+' \r\n                : this.props.item.MinPriceQuantity }</td>\r\n                <td>{(this.props.item.LastWeekGil ===100) ? '100+' \r\n                : this.props.item.LastWeekGil }</td>\r\n                <td>{(this.props.item.LastWeekQuantity ===100) ? '100+' \r\n                : this.props.item.LastWeekQuantity }</td>\r\n                <td>{(this.props.item.LastWeekTransactions === 100) ? '100+' \r\n                : this.props.item.LastWeekTransactions }</td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Item;","import React, { Component } from 'react'\r\n\r\nconst AppContext = React.createContext();\r\n\r\nexport class Provider extends Component {\r\n    state = {\r\n        data: [],\r\n        items: [],\r\n        loadPercent: 0,\r\n        loadIncrementAmount: 0,\r\n        pageNumber: 1,\r\n        pageTotal: 0,\r\n        loadedPages: [1]\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        console.log('Fetching Data');\r\n        this.FetchInitial();\r\n    }\r\n\r\n    FetchInitial() {\r\n        let itemIDs;\r\n        let getItemIdUrl = `https://xivapi.com/search?indexes=item&filters=ItemSearchCategory.ID>=9&page=${this.state.pageNumber}&columns=ID`;\r\n        let url;\r\n\r\n\r\n        fetch(getItemIdUrl, { mode: 'cors' })\r\n            .then(response => response.json()\r\n            )\r\n            .then(response => {\r\n                console.log('response', response);\r\n                console.log(response.Pagination.Page);\r\n                itemIDs = response.Results.map((i) => { return (i.ID); }).toString();\r\n\r\n                url = `https://xivapi.com/market/items?servers=Goblin&ids=${itemIDs}`\r\n\r\n                var loadIncrementAmount = ((1 / (response.Pagination.PageTotal * 2) * 100));\r\n\r\n                // var loadIncrementAmount = 25;\r\n\r\n                this.setState({\r\n                    pageTotal: response.Pagination.PageTotal,\r\n                    loadIncrementAmount: loadIncrementAmount,\r\n                    loadPercent: loadIncrementAmount\r\n                });\r\n\r\n                fetch(url, { mode: 'cors' })\r\n                    .then(response => response.json())\r\n                    .then(data => {\r\n\r\n                        const oneWeekAgo = new Date();\r\n                        oneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\r\n\r\n                        let items;\r\n                        items = data.map((i) => { return i.Goblin });\r\n\r\n                        items = items.map(i => ({\r\n                            ...i,\r\n                            MinPrice: i.Prices.reduce((prev, current) =>\r\n                                (prev.PricePerUnit < current.PricePerUnit) ? prev : current, 0).PricePerUnit,\r\n                            MinPriceQuantity: i.Prices.reduce((prev, current) =>\r\n                                (prev.PricePerUnit < current.PricePerUnit) ? prev : current, 0).Quantity,\r\n                            LastWeekGil: i.History.filter(d => d.PurchaseDateMS >= oneWeekAgo).map(item => item.PriceTotal).reduce((prev, next) => prev + next, 0),\r\n                            LastWeekTransactions: i.History.filter(d => d.PurchaseDateMS >= oneWeekAgo).length,\r\n                            LastWeekQuantity: i.History.filter(d => d.PurchaseDateMS >= oneWeekAgo).map(item => item.Quantity).reduce((prev, next) => prev + next, 0)\r\n                        }));\r\n\r\n                        // console.log('data:', data);\r\n                        // console.log('items:', items);\r\n\r\n\r\n                        this.setState(prevState => ({\r\n                            items: items,\r\n                            data: data,\r\n                            loadPercent: prevState.loadPercent + prevState.loadIncrementAmount\r\n                        }));\r\n                    })\r\n                    .then(data => {\r\n                        this.intervalID = setInterval(() => this.tick(), 200);\r\n                        // this.setState({                            \r\n                        //     loadPercent:100\r\n                        // }\r\n                        // );\r\n                    }\r\n                    )\r\n            });\r\n    }\r\n\r\n    FetchNextPage() {\r\n\r\n        let itemIDs;\r\n\r\n        if (this.state.pageNumber !== this.state.pageTotal) {\r\n            fetch(`https://xivapi.com/search?indexes=item&filters=ItemSearchCategory.ID>=9&page=${this.state.pageNumber + 1}&columns=ID`, { mode: 'cors' })\r\n                .then(response => response.json()\r\n                )\r\n                .then(response => {\r\n                    console.log('response page:', response.Pagination.Page);\r\n                    itemIDs = response.Results.map((i) => { return (i.ID); }).toString();\r\n\r\n                    this.setState(prevState => ({\r\n                        loadedPages: [...prevState.loadedPages,\r\n                        response.Pagination.Page\r\n                        ],\r\n                        pageNumber: response.Pagination.Page,\r\n                        loadPercent: prevState.loadPercent + prevState.loadIncrementAmount\r\n                    }));\r\n\r\n                    fetch(`https://xivapi.com/market/items?servers=Goblin&ids=${itemIDs}`, { mode: 'cors' })\r\n                        .then(response => response.json())\r\n                        .then(data => {\r\n\r\n                            const oneWeekAgo = new Date();\r\n                            oneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\r\n\r\n                            let items;\r\n                            items = data.map((i) => { return i.Goblin });\r\n\r\n                            items = items.map(i => ({\r\n                                ...i,\r\n                                MinPrice: i.Prices.reduce((prev, current) =>\r\n                                    (prev.PricePerUnit < current.PricePerUnit) ? prev : current, 0).PricePerUnit,\r\n                                MinPriceQuantity: i.Prices.reduce((prev, current) =>\r\n                                    (prev.PricePerUnit < current.PricePerUnit) ? prev : current, 0).Quantity,\r\n                                LastWeekGil: i.History.filter(d => d.PurchaseDateMS >= oneWeekAgo).map(item => item.PriceTotal).reduce((prev, next) => prev + next, 0),\r\n                                LastWeekTransactions: i.History.filter(d => d.PurchaseDateMS >= oneWeekAgo).length,\r\n                                LastWeekQuantity: i.History.filter(d => d.PurchaseDateMS >= oneWeekAgo).map(item => item.Quantity).reduce((prev, next) => prev + next, 0)\r\n                            }));\r\n\r\n                            this.setState(prevState => ({\r\n                                items: [...prevState.items, ...items],\r\n                                data: [...prevState.data, ...data],\r\n                                loadPercent: prevState.loadPercent + prevState.loadIncrementAmount\r\n                            }));\r\n                        })\r\n                });\r\n        }\r\n\r\n    }\r\n\r\n    tick = () => {\r\n        if (this.state.pageNumber !== this.state.pageTotal) {\r\n            this.FetchNextPage(this.state.pageNumber);\r\n\r\n            this.setState(prevState => ({\r\n                pageNumber: prevState.pageNumber + 1\r\n            }));\r\n        }\r\n        else {\r\n            clearInterval(this.intervalID);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <AppContext.Provider value={{\r\n                data: this.state.data,\r\n                items: this.state.items,\r\n                loadPercent: this.state.loadPercent,\r\n                actions: {}\r\n            }}>\r\n                {this.props.children}\r\n            </AppContext.Provider>\r\n        );\r\n    }\r\n}\r\nexport const Consumer = AppContext.Consumer;","import React from 'react';\r\nimport Item from './Item';\r\nimport NoItems from './NoItems';\r\nimport { Consumer } from './Context';\r\nimport ReactTable from 'react-table';\r\nimport '../css/react-table.css';\r\n\r\nconst ItemList = () => {\r\n\r\n\r\n    return (\r\n        <Consumer>\r\n            {context => {\r\n\r\n                const oneWeekAgo = new Date();\r\n                oneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\r\n\r\n                const customNameFilterMethod = ({ filter, row }) => {\r\n                    console.log('filter:', filter);\r\n                    console.log('row:', row[filter.id]);\r\n\r\n\r\n                    if (filter.value === '') { return true }\r\n\r\n                    \r\n                    else { return false }\r\n                }\r\n\r\n                const columns = [{\r\n                    Header: 'Item ID',\r\n                    accessor: 'ItemID',\r\n                    headerClassName: 'hidden',\r\n                    className: 'hidden'\r\n                }, {\r\n                    Header: 'Item Name',\r\n                    accessor: 'Item.Name',\r\n                    sortable: true,\r\n                    filterable: true,\r\n                    filterMethod: (filter, row) => {\r\n                        if (filter.value === '') { return true }\r\n                        if (row[filter.id].toUpperCase().includes(filter.value.toUpperCase())) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                }, {\r\n                    Header: 'Lowest Price',\r\n                    accessor: 'MinPrice',\r\n                    className: 'number-table',\r\n                    sortable: true,\r\n                    Cell: props => new Intl.NumberFormat().format(props.value)\r\n                }, {\r\n                    Header: 'Quantity',\r\n                    accessor: 'MinPriceQuantity',\r\n                    className: 'number-table',\r\n                    sortable: true,\r\n                    Cell: props => new Intl.NumberFormat().format(props.value)\r\n                }, {\r\n                    Header: 'Gil Made Last Week',\r\n                    accessor: 'LastWeekGil',\r\n                    className: 'number-table',\r\n                    sortable: true,\r\n                    Cell: props => new Intl.NumberFormat().format(props.value),\r\n                    filterable: true,\r\n                    filterMethod: (filter, row) => {\r\n                        console.log(row[filter.id],'>=',parseInt(filter.value),'=', row[filter.id]>=parseInt(filter.value));\r\n                        if (filter.value === '') { return true }\r\n                        if (row[filter.id]>=parseInt(filter.value)) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                }, {\r\n                    Header: 'Units Sold Last Week',\r\n                    accessor: 'LastWeekQuantity',\r\n                    className: 'number-table',\r\n                    sortable: true,\r\n                    Cell: props => new Intl.NumberFormat().format(props.value),\r\n                    filterable: true,\r\n                    filterMethod: (filter, row) => {\r\n                        if (filter.value === '') { return true }\r\n                        if (row[filter.id]<=filter.value) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                }, {\r\n                    Header: 'Transactions Last Week',\r\n                    accessor: 'LastWeekTransactions',\r\n                    className: 'number-table',\r\n                    sortable: true,\r\n                    Cell: props => new Intl.NumberFormat().format(props.value),\r\n                    filterable: true,\r\n                    filterMethod: (filter, row) => {\r\n                        if (filter.value === '') { return true }\r\n                        if (row[filter.id]>=parseInt(filter.value)) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                }\r\n                ]\r\n\r\n                return (\r\n                    <ReactTable className=\"dark -striped -highlight\"\r\n                        data={context.items}\r\n                        columns={columns}\r\n                    />\r\n                );\r\n            }}\r\n        </Consumer>\r\n    );\r\n}\r\n// A function returning a boolean that specifies the filtering logic for the column\r\n// 'filter' == an object specifying which filter is being applied. Format: {id: [the filter column's id], \r\n//value: [the value the user typed in the filter field], pivotId: [if filtering on a pivot column, \r\n//the pivotId will be set to the pivot column's id and the `id` field will be set to the top level pivoting column]}\r\n// 'row' || 'rows' == the row (or rows, if filterAll is set to true) of data supplied to the table\r\n// 'column' == the column that the filter is on\r\nexport default ItemList;","import Spinner from 'react-spinner-material';\r\nimport React, { Component } from 'react';\r\nimport { Consumer } from './Context';\r\n\r\nexport default class Loading extends Component {\r\n    render() {\r\n        return (\r\n            <Consumer>\r\n                {context => {\r\n                    return (\r\n                        <div className=\"loading-div\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-2\"></div>\r\n                                <div className=\"col center\">\r\n                                    <h1>Data is being fetched from the server</h1>\r\n                                </div>\r\n                                <div className=\"col-2\"></div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col\"></div>\r\n                                <div className=\"col-3 center\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col\"></div>\r\n                                        <div className=\"col\">\r\n                                            <Spinner size={150} spinnerColor={\"#333\"} spinnerWidth={15} visible={true} /></div>\r\n                                        <div className=\"col\"></div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col\"></div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col\"></div>\r\n                                <div className=\"col center\">\r\n                                    <h2>{(context.loadPercent).toFixed(1)}%</h2>\r\n                                </div>\r\n                                <div className=\"col\"></div>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                }}\r\n            </Consumer>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport ItemList from './ItemList';\r\nimport Loading from './Loading';\r\nimport { Consumer } from './Context';\r\n\r\n\r\nclass Marketboard extends Component {\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    let teacherName = this.name.value;\r\n    let teacherTopic = this.topic.value;\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('Marketboard props:', this.props);\r\n  }\r\n  render() {\r\n\r\n    let page;\r\n\r\n    if (this.props.loadPercent < 100) {\r\n      page = <Loading />\r\n    }\r\n    else {\r\n      page = <ItemList />\r\n    }\r\n\r\n    return (\r\n      <Consumer>\r\n        {context => {\r\n          return (\r\n            <div className=\"main-content home\">\r\n              <div className=\"row\">\r\n                <div className=\"col\"></div>\r\n                <div className=\"col\"><h2>Currently only working on Goblin</h2></div>\r\n                <div className=\"col\"></div>\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\"col\">\r\n                  <p><strong>Item name</strong> search box is case insensitive</p>\r\n                </div>\r\n                <div className=\"col\">\r\n                  <p><strong>Gil made Last Week</strong> search box is for gil <strong>greater than or equal to</strong> the provided value</p>\r\n                </div>\r\n                <div className=\"col\">\r\n                  <p><strong>Units Sold Last Week</strong> search box is for units <strong>less than or equal to</strong> the provided value</p>\r\n                </div>\r\n                <div className=\"col\">\r\n                  <p><strong>Transactions Last Week</strong> search box is for transactions <strong>greater than or equal to</strong> the provided value</p>\r\n                </div>\r\n              </div>\r\n\r\n\r\n\r\n\r\n              {/* <form onSubmit={context.actions.handleSubmit}>\r\n                <input type=\"text\" placeholder=\"Name\" ref={(input) => this.name = input} />\r\n                <input type=\"number\" placeholder=\"Min Gil Made\" ref={(input) => this.topic = input} />\r\n                <input type=\"number\" placeholder=\"Max Units Sold\" ref={(input) => this.topic = input} />\r\n                <input type=\"number\" placeholder=\"Min Transactions\" ref={(input) => this.topic = input} />\r\n                <button type=\"submit\">Go!</button>\r\n              </form> */}\r\n              <hr />\r\n              {page}\r\n            </div>\r\n          )\r\n        }}\r\n      </Consumer>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Marketboard;","import React, { Component } from 'react';\r\nimport {\r\n  HashRouter,\r\n  Route,\r\n  Switch\r\n} from 'react-router-dom';\r\n//App componentes\r\nimport Header from './Header';\r\nimport Gathering from './Gathering';\r\nimport Crafting from './Crafting';\r\nimport About from './About';\r\nimport NotFound from './NotFound';\r\nimport Marketboard from './Marketboard';\r\nimport { Consumer } from './Context';\r\n\r\n\r\nclass App extends Component {\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {context => {\r\n          return (\r\n            <HashRouter>\r\n              <div className=\"container\">\r\n                <Header />\r\n                <Switch>\r\n                  <Route exact path=\"/\" render={() => <Marketboard loadPercent={context.loadPercent}/>} />\r\n                  <Route path=\"/gathering\" render={() => <Gathering title='Gathering' />} />\r\n                  <Route exact path=\"/crafting\" component={Crafting} />\r\n                  <Route exact path=\"/about\" component={About} />\r\n                  <Route component={NotFound} />\r\n                </Switch>\r\n              </div>\r\n            </HashRouter>\r\n          );\r\n        }}\r\n\r\n      </Consumer>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport { Provider } from './components/Context';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './css/index.css';\r\nReactDOM.render(\r\n  <Provider>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}