{"version":3,"sources":["data/logo.png","components/Header.js","components/Gathering.js","components/Crafting.js","components/About.js","components/NotFound.js","components/Context/index.js","components/ItemList.js","components/Loading.js","components/Marketboard.js","components/App.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","src","logo","alt","react_router_dom","exact","to","Gathering","props","title","Crafting","About","NotFound","AppContext","React","createContext","Provider","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","classJobs","data","items","itemSpecifics","loadPercent","loadIncrementAmount","pageNumber","pageTotal","totalResults","specificPages","specificPage","inherits","createClass","key","value","console","log","FetchClasses","FetchData","_this2","fetch","mode","then","response","json","setState","Results","pageNum","itemIDs","_this3","map","i","ID","toString","Pagination","PageTotal","prevState","PageNext","ResultsTotal","toConsumableArray","FormatData","nextPageNum","setTimeout","oneWeekAgo","Date","setDate","getDate","objectSpread","Goblin","MinPrice","Prices","reduce","prev","current","PricePerUnit","MinPriceQuantity","Quantity","MinPriceHQ","filter","_ref","IsHQ","LastWeekGil","History","d","PurchaseDateMS","item","PriceTotal","next","LastWeekTransactions","LastWeekQuantity","FetchItemSpecifics","_this4","method","body","Page","nextPage","MergeItemSpecifics","_this5","index","j","obj","itemList","crafter","rarity","Item","Recipes","GetClass","ClassJobID","GetRarity","Rarity","Crafter","id","result","find","toTitleCase","Name","str","replace","txt","charAt","toUpperCase","substr","toLowerCase","actions","children","Component","Consumer","ItemList","context","columns","accessor","headerClassName","sortable","filterable","filterMethod","row","includes","Cell","Intl","NumberFormat","format","parseInt","push","undefined","es","Loading","lib_default","size","spinnerColor","spinnerWidth","visible","toFixed","Marketboard","handleSubmit","e","preventDefault","page","specifics","Loading_Loading","components_ItemList","App","components_Header","react_router","path","render","components_Marketboard","components_Gathering","component","ReactDOM","Context_Provider","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.8db648cb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.1d985892.png\";","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport logo from '../data/logo.png'\r\n\r\nconst Header = () => (\r\n  <header className=\"main-header\">\r\n    <img src={logo} alt=\"FFXIV Fan Page\"></img>\r\n    <ul className=\"main-nav\">\r\n      <li><NavLink exact to=\"/\">Marketboard</NavLink></li>\r\n      <li><NavLink to=\"/gathering\">Gathering</NavLink></li>\r\n      <li><NavLink to=\"/crafting\">Crafting</NavLink></li>\r\n      <li><NavLink to=\"/about\">About</NavLink></li>\r\n    </ul>    \r\n  </header>\r\n);\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst Gathering = (props) => (\r\n  <div className=\"main-content\">\r\n    <h2>{props.title}</h2>\r\n    <p>Coming Soon</p>\r\n  </div>\r\n);\r\n\r\nexport default Gathering;","import React from 'react';\r\n\r\n  \r\n\r\nconst Crafting = () => {\r\n  \r\n  return (\r\n    <p>coming soon</p>\r\n  );\r\n}\r\n\r\nexport default Crafting;","import React from 'react';\r\n\r\nconst About = () => {\r\n\r\n  return (\r\n    <div className=\"main-content\">\r\n      <h2>About</h2>\r\n      <p>Jsut a dude working on this in spare time</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;","import React from 'react';\r\n\r\nconst NotFound = () => (\r\n  <div className=\"main-content not-found\">\r\n    <i className=\"material-icons icn-error\">error_outline</i>\r\n    <h2>Page Not Found</h2>\r\n  </div>\r\n);\r\n\r\nexport default NotFound;","import React, { Component } from 'react'\r\n\r\nconst AppContext = React.createContext();\r\n\r\nexport class Provider extends Component {\r\n    state = {\r\n        classJobs: [],\r\n        data: [],\r\n        items: [],\r\n        itemSpecifics: [],\r\n        loadPercent: 0,\r\n        loadIncrementAmount: 0,\r\n        pageNumber: 1,\r\n        pageTotal: 0,\r\n        totalResults: 0,\r\n        specificPages: 0,\r\n        specificPage: 1\r\n    }\r\n\r\n\r\n    //TODO:: add item pictures for each item\r\n\r\n    componentDidMount() {\r\n        console.log('Fetching Data');\r\n        this.FetchClasses();\r\n        this.FetchData(this.state.pageNumber);\r\n        // this.FetchItemSpecifics(105);\r\n    }\r\n\r\n    FetchClasses() {\r\n        fetch('https://xivapi.com/classJob?columns=ID,Name', { mode: 'cors' })\r\n            .then(response => response.json()\r\n            )\r\n            .then(response => {\r\n                this.setState({\r\n                    classJobs: response.Results\r\n                })\r\n            });\r\n    }\r\n\r\n    FetchData(pageNum) {\r\n        let itemIDs;\r\n\r\n        fetch(`https://xivapi.com/search?indexes=item&filters=ItemSearchCategory.ID>=9&page=${pageNum}&columns=ID`, { mode: 'cors' })\r\n            .then(response => { return response.json() }\r\n            )\r\n            .then(response => {\r\n                itemIDs = response.Results.map((i) => { return (i.ID); }).toString();\r\n                var loadIncrementAmount = ((1 / (response.Pagination.PageTotal * 2) * 100));\r\n\r\n                this.setState(prevState => ({\r\n                    pageTotal: response.Pagination.PageTotal,\r\n                    pageNumber: response.Pagination.PageNext,\r\n                    loadIncrementAmount: loadIncrementAmount,\r\n                    totalResults: response.Pagination.ResultsTotal,\r\n                    loadPercent: prevState.loadPercent + loadIncrementAmount\r\n                }));\r\n\r\n\r\n                fetch(`https://xivapi.com/market/items?servers=Goblin&ids=${itemIDs}`, { mode: 'cors' })\r\n                    .then(response => response.json())\r\n                    .then(data => {\r\n\r\n                        this.setState(prevState => ({\r\n                            data: [...prevState.data,\r\n                            ...data],\r\n                            loadPercent: prevState.loadPercent + prevState.loadIncrementAmount\r\n                        }));\r\n                    })\r\n                    .then(data => {\r\n                        if (this.state.data.length === this.state.totalResults) {\r\n                            this.FormatData();\r\n                            this.setState({\r\n                                loadPercent: 100\r\n                            }\r\n                            );\r\n                        }\r\n                    })\r\n                return response.Pagination.PageNext;\r\n            })\r\n            .then(nextPageNum => {\r\n                if (nextPageNum !== null) {\r\n                    setTimeout(this.FetchData(this.state.pageNumber), 200);\r\n                }\r\n            }\r\n            );\r\n    }\r\n\r\n    FormatData() {\r\n\r\n        const oneWeekAgo = new Date();\r\n        oneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\r\n\r\n        let items = this.state.data;\r\n\r\n\r\n        items = items.map(i => ({\r\n            ...i.Goblin,\r\n            MinPrice: i.Goblin.Prices.reduce((prev, current) =>\r\n                (prev.PricePerUnit < current.PricePerUnit) ? prev : current, 0).PricePerUnit || 0,\r\n            MinPriceQuantity: i.Goblin.Prices.reduce((prev, current) =>\r\n                (prev.PricePerUnit < current.PricePerUnit) ? prev : current, 0).Quantity || 0,\r\n            MinPriceHQ: i.Goblin.Prices.filter(({ IsHQ }) => IsHQ === true).reduce((prev, current) =>\r\n                (prev.PricePerUnit < current.PricePerUnit) ? prev : current, 0).PricePerUnit || 0,\r\n            LastWeekGil: i.Goblin.History.filter(d => d.PurchaseDateMS >= oneWeekAgo).map(item => item.PriceTotal).reduce((prev, next) => prev + next, 0),\r\n            LastWeekTransactions: i.Goblin.History.filter(d => d.PurchaseDateMS >= oneWeekAgo).length,\r\n            LastWeekQuantity: i.Goblin.History.filter(d => d.PurchaseDateMS >= oneWeekAgo).map(item => item.Quantity).reduce((prev, next) => prev + next, 0)\r\n        }));\r\n\r\n        this.setState({\r\n            items: items,\r\n            data: []\r\n        })\r\n        this.FetchItemSpecifics(1);\r\n    }\r\n\r\n    FetchItemSpecifics(pageNum) {\r\n\r\n        fetch(`https://xivapi.com/search?page=${pageNum}`, {\r\n            method: 'POST',\r\n            body: '{\"indexes\": \"item\",\"columns\": \"ID,Recipes,Rarity\",\"body\": {\"query\": {\"bool\": {\"filter\": [{\"range\": {\"ItemSearchCategory.ID\": {\"gt\": \"9\"}}}]}},\"from\": 0,\"size\": 100,\"sort\": [{\"LevelItem\": \"desc\"}]}}'\r\n        })\r\n            .then(response => {\r\n                return response.json()\r\n            })\r\n            .then(data => {\r\n\r\n                this.setState(prevState => ({\r\n                    specificPage: data.Pagination.Page,\r\n                    specificPages: data.Pagination.PageTotal,\r\n                    itemSpecifics: [\r\n                        ...prevState.itemSpecifics,\r\n                        ...data.Results\r\n                    ]\r\n                }));\r\n\r\n                return data.Pagination.PageNext;\r\n            })\r\n            .then(nextPage => {\r\n\r\n                if (nextPage != null) {\r\n                    setTimeout(this.FetchItemSpecifics(nextPage), 200);\r\n                }\r\n                else {\r\n                    this.MergeItemSpecifics();\r\n                }\r\n            })\r\n    }\r\n\r\n    MergeItemSpecifics() {\r\n        var index = {};\r\n        for (var j in this.state.itemSpecifics) {\r\n            var obj = this.state.itemSpecifics[j];\r\n            index[obj.ID] = obj;\r\n        }\r\n\r\n        var itemList = this.state.items;\r\n\r\n        itemList = itemList.map(i => {\r\n            let crafter;\r\n            let rarity;\r\n            if (index[i.Item.ID]) {\r\n                if (index[i.Item.ID].Recipes === null) {\r\n                    crafter = null;\r\n                }\r\n                else {\r\n                    crafter = this.GetClass(index[i.Item.ID].Recipes[0].ClassJobID);\r\n                }\r\n                rarity = this.GetRarity(index[i.Item.ID].Rarity);\r\n            }\r\n\r\n            return {\r\n                ...i,\r\n                Crafter: crafter,\r\n                Rarity: rarity\r\n            }\r\n        });\r\n\r\n        this.setState(prevState => ({\r\n            items: itemList.map(i => {\r\n                let crafter;\r\n                let rarity;\r\n                if (index[i.Item.ID]) {\r\n                    if (index[i.Item.ID].Recipes === null) {\r\n                        crafter = null;\r\n                    }\r\n                    else {\r\n                        crafter = this.GetClass(index[i.Item.ID].Recipes[0].ClassJobID);\r\n                    }\r\n                    rarity = this.GetRarity(index[i.Item.ID].Rarity);\r\n                }\r\n\r\n                return {\r\n                    ...i,\r\n                    Crafter: crafter,\r\n                    Rarity: rarity\r\n                }\r\n            })\r\n        }));\r\n    }\r\n\r\n    GetClass(id) {\r\n        if (id === null) {\r\n            return '';\r\n        }\r\n        var result = this.state.classJobs.find(obj => {\r\n            return obj.ID === id;\r\n        })\r\n        return this.toTitleCase(result.Name);\r\n    }\r\n\r\n    GetRarity(id) {\r\n        switch (id) {\r\n            case 1: return 'Common'\r\n            case 2: return 'Uncommon'\r\n            case 3: return 'Rare'\r\n            case 4: return 'Relic'\r\n            case 7: return 'Aetherial'\r\n            default: return 'Common'\r\n        }\r\n    }\r\n\r\n    toTitleCase(str) {\r\n        return str.replace(/\\w\\S*/g, function (txt) {\r\n            return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <AppContext.Provider value={{\r\n                classJobs: this.state.classJobs,\r\n                data: this.state.data,\r\n                items: this.state.items,\r\n                itemSpecifics: this.state.itemSpecifics,\r\n                loadPercent: this.state.loadPercent,\r\n                specificPages: this.state.specificPages,\r\n                specificPage: this.state.specificPage,\r\n                actions: {}\r\n            }}>\r\n                {this.props.children}\r\n            </AppContext.Provider>\r\n        );\r\n    }\r\n}\r\nexport const Consumer = AppContext.Consumer;","import React from 'react';\r\nimport { Consumer } from './Context';\r\nimport ReactTable from 'react-table';\r\nimport '../css/react-table.css';\r\n\r\nconst ItemList = () => {\r\n\r\n\r\n    return (\r\n        <Consumer>\r\n            {context => {\r\n\r\n                const oneWeekAgo = new Date();\r\n                oneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\r\n\r\n                const columns = [{\r\n                    Header: 'Item ID',\r\n                    accessor: 'ItemID',\r\n                    headerClassName: 'hidden',\r\n                    className: 'hidden'\r\n                }, {\r\n                    Header: 'Item Name',\r\n                    accessor: 'Item.Name',\r\n                    sortable: true,\r\n                    filterable: true,\r\n                    filterMethod: (filter, row) => {\r\n                        if (filter.value === '') { return true }\r\n                        if (row[filter.id].toUpperCase().includes(filter.value.toUpperCase())) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                }, {\r\n                    Header: 'Lowest Price',\r\n                    accessor: 'MinPrice',\r\n                    className: 'number-table',\r\n                    sortable: true,\r\n                    Cell: props => new Intl.NumberFormat().format(props.value)\r\n                }, {\r\n                    Header: 'Quantity',\r\n                    accessor: 'MinPriceQuantity',\r\n                    className: 'number-table',\r\n                    sortable: true,\r\n                    Cell: props => new Intl.NumberFormat().format(props.value)\r\n                }, {\r\n                    Header: 'Lowest HQ',\r\n                    accessor: 'MinPrice',\r\n                    className: 'number-table',\r\n                    sortable: true,\r\n                    Cell: props => new Intl.NumberFormat().format(props.value)\r\n                }, {\r\n                    Header: 'Gil Made Last Week',\r\n                    accessor: 'LastWeekGil',\r\n                    className: 'number-table',\r\n                    sortable: true,\r\n                    Cell: props => new Intl.NumberFormat().format(props.value),\r\n                    filterable: true,\r\n                    filterMethod: (filter, row) => {\r\n                        console.log(row[filter.id], '>=', parseInt(filter.value), '=', row[filter.id] >= parseInt(filter.value));\r\n                        if (filter.value === '') { return true }\r\n                        if (row[filter.id] >= parseInt(filter.value)) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                }, {\r\n                    Header: 'Units Sold Last Week',\r\n                    accessor: 'LastWeekQuantity',\r\n                    className: 'number-table',\r\n                    sortable: true,\r\n                    Cell: props => new Intl.NumberFormat().format(props.value),\r\n                    filterable: true,\r\n                    filterMethod: (filter, row) => {\r\n                        if (filter.value === '') { return true }\r\n                        if (row[filter.id] <= filter.value) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                }, {\r\n                    Header: 'Transactions Last Week',\r\n                    accessor: 'LastWeekTransactions',\r\n                    className: 'number-table',\r\n                    sortable: true,\r\n                    Cell: props => new Intl.NumberFormat().format(props.value),\r\n                    filterable: true,\r\n                    filterMethod: (filter, row) => {\r\n                        if (filter.value === '') { return true }\r\n                        if (row[filter.id] >= parseInt(filter.value)) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                }\r\n                ]\r\n\r\n                if (context.specificPage >= context.specificPages) {\r\n                    columns.push({\r\n                        Header: 'Crafter',\r\n                        accessor: 'Crafter',\r\n                        sortable: true,\r\n                        filterable: true,\r\n                        filterMethod: (filter, row) => {\r\n                            if (filter.value === '') { return true }\r\n                            else if (row[filter.id] === undefined || row[filter.id] === null) { return false }\r\n                            else if (row[filter.id].toUpperCase().includes(filter.value.toUpperCase())) {\r\n                                return true;\r\n                            }\r\n                        }\r\n                    })\r\n                }\r\n                return (\r\n                    <ReactTable className=\"dark -striped -highlight\"\r\n                        data={context.items}\r\n                        columns={columns}\r\n                    />\r\n                );\r\n            }}\r\n        </Consumer>\r\n    );\r\n}\r\n\r\nexport default ItemList;","import Spinner from 'react-spinner-material';\r\nimport React, { Component } from 'react';\r\nimport { Consumer } from './Context';\r\n\r\nexport default class Loading extends Component {\r\n    render() {\r\n        return (\r\n            <Consumer>\r\n                {context => {\r\n                    return (\r\n                        <div className=\"loading-div\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-2\"></div>\r\n                                <div className=\"col center\">\r\n                                    <h1>Data is being fetched from the server</h1>\r\n                                </div>\r\n                                <div className=\"col-2\"></div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col\"></div>\r\n                                <div className=\"col-3 center\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col\"></div>\r\n                                        <div className=\"col\">\r\n                                            <Spinner size={150} spinnerColor={\"#333\"} spinnerWidth={15} visible={true} /></div>\r\n                                        <div className=\"col\"></div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col\"></div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col\"></div>\r\n                                <div className=\"col center\">\r\n                                    <h2>{(context.loadPercent).toFixed(1)}%</h2>\r\n                                </div>\r\n                                <div className=\"col\"></div>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                }}\r\n            </Consumer>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport ItemList from './ItemList';\r\nimport Loading from './Loading';\r\nimport { Consumer } from './Context';\r\n\r\n\r\nclass Marketboard extends Component {\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n  render() {\r\n\r\n    let page;\r\n    let specifics;\r\n\r\n    if (this.props.loadPercent < 100) {\r\n      page = <Loading />\r\n    }\r\n    else {\r\n      page = <ItemList />\r\n    }\r\n\r\n    return (\r\n      <Consumer>\r\n        {context => {\r\n          if (context.specificPage < context.specificPages) {\r\n            specifics =\r\n              <div className=\"row\">\r\n                <div className=\"col\"></div>\r\n                <div className=\"col\">Loading Recipes and rarity</div>\r\n                <div className=\"col\">{context.specificPage} / {context.specificPages}</div>\r\n              </div>\r\n          }\r\n          else {\r\n            specifics = <div></div>\r\n          }\r\n          return (\r\n            <div className=\"main-content home\">\r\n              <div className=\"row\">\r\n                <div className=\"col\"></div>\r\n                <div className=\"col\"><h2>Currently only working on Goblin</h2></div>\r\n                <div className=\"col\"></div>\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\"col\">\r\n                  <p><strong>Item name</strong> search box is case insensitive</p>\r\n                </div>\r\n                <div className=\"col\">\r\n                  <p><strong>Gil made Last Week</strong> search box is for gil <strong>greater than or equal to</strong> the provided value</p>\r\n                </div>\r\n                <div className=\"col\">\r\n                  <p><strong>Units Sold Last Week</strong> search box is for units <strong>less than or equal to</strong> the provided value</p>\r\n                </div>\r\n                <div className=\"col\">\r\n                  <p><strong>Transactions Last Week</strong> search box is for transactions <strong>greater than or equal to</strong> the provided value</p>\r\n                </div>\r\n              </div>\r\n              <hr />\r\n              {specifics}\r\n              {page}\r\n            </div>\r\n          )\r\n        }}\r\n      </Consumer>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Marketboard;","import React, { Component } from 'react';\r\nimport {\r\n  HashRouter,\r\n  Route,\r\n  Switch\r\n} from 'react-router-dom';\r\n//App componentes\r\nimport Header from './Header';\r\nimport Gathering from './Gathering';\r\nimport Crafting from './Crafting';\r\nimport About from './About';\r\nimport NotFound from './NotFound';\r\nimport Marketboard from './Marketboard';\r\nimport { Consumer } from './Context';\r\n\r\n\r\nclass App extends Component {\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {context => {\r\n          return (\r\n            <HashRouter>\r\n              <div className=\"container\">\r\n                <Header />\r\n                <Switch>\r\n                  <Route exact path=\"/\" render={() => <Marketboard loadPercent={context.loadPercent}/>} />\r\n                  <Route path=\"/gathering\" render={() => <Gathering title='Gathering' />} />\r\n                  <Route exact path=\"/crafting\" component={Crafting} />\r\n                  <Route exact path=\"/about\" component={About} />\r\n                  <Route component={NotFound} />\r\n                </Switch>\r\n              </div>\r\n            </HashRouter>\r\n          );\r\n        }}\r\n\r\n      </Consumer>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport { Provider } from './components/Context';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './css/index.css';\r\nReactDOM.render(\r\n  <Provider>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}