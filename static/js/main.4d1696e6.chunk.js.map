{"version":3,"sources":["data/logo.png","components/Header.js","components/Gathering.js","components/Crafting.js","components/About.js","components/NotFound.js","components/Context/index.js","components/ItemList.js","components/Loading.js","components/Marketboard.js","components/App.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","src","logo","alt","react_router_dom","exact","to","Gathering","props","title","Crafting","About","NotFound","AppContext","React","createContext","Provider","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","classJobs","data","items","recipe","loadPercent","loadIncrementAmount","pageNumber","pageTotal","totalResults","specificLoaded","specificTotal","inherits","createClass","key","value","fetch","method","body","then","response","json","console","log","FetchClasses","FetchData","_this2","mode","setState","Results","pageNum","itemIDs","_this3","map","i","ID","toString","Pagination","PageTotal","prevState","PageNext","ResultsTotal","toConsumableArray","FormatData","nextPageNum","setTimeout","_this4","oneWeekAgo","Date","setDate","getDate","objectSpread","Goblin","MinPrice","Prices","reduce","prev","current","PricePerUnit","MinPriceQuantity","Quantity","MinPriceHQ","filter","_ref","IsHQ","LastWeekGil","History","d","PurchaseDateMS","item","PriceTotal","next","LastWeekTransactions","LastWeekQuantity","Rarity","GetRarity","Item","FetchRecipes","_this5","FormatRecipes","craftClass","craftLvl","Recipes","classes","lvl","j","push","GetClass","ClassJobID","Level","join","Math","min","Crafters","CraftLvl","MergeRecipes","merged","_loop","find","itmInner","ItemID","id","result","obj","toTitleCase","Name","str","replace","txt","charAt","toUpperCase","substr","toLowerCase","actions","children","Component","Consumer","ItemList","context","columns","accessor","show","sortable","filterable","filterMethod","row","includes","width","Cell","Intl","NumberFormat","format","parseInt","undefined","es","pageSizeOptions","defaultPageSize","getTrProps","rowInfo","column","Loading","lib_default","size","spinnerColor","spinnerWidth","visible","toFixed","Marketboard","handleSubmit","e","preventDefault","page","specifics","Loading_Loading","components_ItemList","App","components_Header","react_router","path","render","components_Marketboard","components_Gathering","component","ReactDOM","Context_Provider","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.4d1696e6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.1d985892.png\";","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport logo from '../data/logo.png'\r\n\r\nconst Header = () => (\r\n  <header className=\"main-header\">\r\n    <img src={logo} alt=\"FFXIV Fan Page\"></img>\r\n    <ul className=\"main-nav\">\r\n      <li><NavLink exact to=\"/\">Marketboard</NavLink></li>\r\n      <li><NavLink to=\"/gathering\">Gathering</NavLink></li>\r\n      <li><NavLink to=\"/crafting\">Crafting</NavLink></li>\r\n      <li><NavLink to=\"/about\">About</NavLink></li>\r\n    </ul>    \r\n  </header>\r\n);\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst Gathering = (props) => (\r\n  <div className=\"main-content\">\r\n    <h2>{props.title}</h2>\r\n    <p>Coming Soon</p>\r\n  </div>\r\n);\r\n\r\nexport default Gathering;","import React from 'react';\r\n\r\n  \r\n\r\nconst Crafting = () => {\r\n  \r\n  return (\r\n    <p>coming soon</p>\r\n  );\r\n}\r\n\r\nexport default Crafting;","import React from 'react';\r\n\r\nconst About = () => {\r\n\r\n  return (\r\n    <div className=\"main-content\">\r\n      <h2>About</h2>\r\n      <p>Jsut a dude working on this in spare time</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;","import React from 'react';\r\n\r\nconst NotFound = () => (\r\n  <div className=\"main-content not-found\">\r\n    <i className=\"material-icons icn-error\">error_outline</i>\r\n    <h2>Page Not Found</h2>\r\n  </div>\r\n);\r\n\r\nexport default NotFound;","import React, { Component } from 'react'\r\n\r\nconst AppContext = React.createContext();\r\n\r\nexport class Provider extends Component {\r\n    state = {\r\n        classJobs: [],\r\n        data: [],\r\n        items: [],\r\n        recipe: [],\r\n        loadPercent: 0,\r\n        loadIncrementAmount: 0,\r\n        pageNumber: 1,\r\n        pageTotal: 0,\r\n        totalResults: 0,\r\n        specificLoaded: 0,\r\n        specificTotal: 100\r\n    }\r\n\r\n\r\n    //TODO:: add item pictures for each item\r\n    test() {\r\n        fetch(`https://xivapi.com/search?page=${1}`, {\r\n            method: 'POST',\r\n            body: '{\"indexes\": \"item\",\"columns\": \"ID,Recipes\",\"body\": {\"query\": {\"bool\": {\"filter\": [{\"range\": {\"ItemSearchCategory.ID\": {\"gte\": \"9\"}}}]}},\"from\": 0,\"size\": 100,\"sort\": [{\"LevelItem\": \"desc\"}]}}'\r\n        })\r\n            .then(response => {\r\n                return response.json()\r\n            })\r\n            .then(data => {\r\n                // console.log('recipe response', data);\r\n            });\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log('Fetching Data');\r\n        this.FetchClasses();\r\n        this.FetchData(this.state.pageNumber);\r\n        // this.FetchRecipes();\r\n\r\n    }\r\n\r\n    FetchClasses() {\r\n        fetch('https://xivapi.com/classJob?columns=ID,Name', { mode: 'cors' })\r\n            .then(response => response.json()\r\n            )\r\n            .then(response => {\r\n                this.setState({\r\n                    classJobs: response.Results\r\n                })\r\n                // this.test()\r\n                // console.log('classes response:', response.Results);\r\n            });\r\n    }\r\n\r\n    FetchData(pageNum) {\r\n        let itemIDs;\r\n\r\n        fetch(`https://xivapi.com/search?indexes=item&filters=ItemSearchCategory.ID>=9&page=${pageNum}&columns=ID`, { mode: 'cors' })\r\n            .then(response => { return response.json() }\r\n            )\r\n            .then(response => {\r\n                // console.log('itemList Initial Response', response);\r\n                itemIDs = response.Results.map((i) => { return (i.ID); }).toString();\r\n                var loadIncrementAmount = ((1 / (response.Pagination.PageTotal * 2) * 100));\r\n                // console.log(response);\r\n                this.setState(prevState => ({\r\n                    pageTotal: response.Pagination.PageTotal,\r\n                    pageNumber: response.Pagination.PageNext,\r\n                    loadIncrementAmount: loadIncrementAmount,\r\n                    totalResults: response.Pagination.ResultsTotal,\r\n                    loadPercent: prevState.loadPercent + loadIncrementAmount\r\n                }));\r\n\r\n\r\n                fetch(`https://xivapi.com/market/items?servers=Goblin&ids=${itemIDs}`, { mode: 'cors' })\r\n                    .then(response => response.json())\r\n                    .then(data => {\r\n                        // console.log('item data Response', data);\r\n\r\n                        this.setState(prevState => ({\r\n                            data: [...prevState.data,\r\n                            ...data],\r\n                            loadPercent: prevState.loadPercent + prevState.loadIncrementAmount\r\n                        }));\r\n                    })\r\n                    .then(data => {\r\n                        if (this.state.data.length === this.state.totalResults) {\r\n                            this.FormatData();\r\n                            this.setState({\r\n                                loadPercent: 100\r\n                            }\r\n                            );\r\n                        }\r\n                    })\r\n                return response.Pagination.PageNext;\r\n            })\r\n            .then(nextPageNum => {\r\n                if (nextPageNum !== null) {\r\n                    setTimeout(this.FetchData(this.state.pageNumber), 200);\r\n                }\r\n            }\r\n            );\r\n    }\r\n\r\n    FormatData() {\r\n\r\n        const oneWeekAgo = new Date();\r\n        oneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\r\n\r\n        let items = this.state.data;\r\n        // console.log('items:', items);\r\n\r\n        items = items.map(i => ({\r\n            ...i.Goblin,\r\n            MinPrice: i.Goblin.Prices.reduce((prev, current) =>\r\n                (prev.PricePerUnit < current.PricePerUnit) ? prev : current, 0).PricePerUnit || 0,\r\n            MinPriceQuantity: i.Goblin.Prices.reduce((prev, current) =>\r\n                (prev.PricePerUnit < current.PricePerUnit) ? prev : current, 0).Quantity || 0,\r\n            MinPriceHQ: i.Goblin.Prices.filter(({ IsHQ }) => IsHQ === true).reduce((prev, current) =>\r\n                (prev.PricePerUnit < current.PricePerUnit) ? prev : current, 0).PricePerUnit || 0,\r\n            LastWeekGil: i.Goblin.History.filter(d => d.PurchaseDateMS >= oneWeekAgo).map(item => item.PriceTotal).reduce((prev, next) => prev + next, 0),\r\n            LastWeekTransactions: i.Goblin.History.filter(d => d.PurchaseDateMS >= oneWeekAgo).length,\r\n            LastWeekQuantity: i.Goblin.History.filter(d => d.PurchaseDateMS >= oneWeekAgo).map(item => item.Quantity).reduce((prev, next) => prev + next, 0),\r\n            Rarity: this.GetRarity(i.Goblin.Item.Rarity)\r\n        }));\r\n\r\n        this.setState({\r\n            items: items,\r\n            data: []\r\n        })\r\n        this.FetchRecipes();\r\n    }\r\n\r\n    FetchRecipes() {\r\n        fetch(`https://xivapi.com/search`, {\r\n            method: 'POST',\r\n            body: `{\"indexes\": \"item\",\"columns\": \"ID,Recipes\",\"body\": {\"query\": {\"bool\": {\"filter\": [{\"range\": {\"ItemSearchCategory.ID\": {\"gte\": \"9\"}}}]}},\"from\": ${this.state.specificLoaded},\"size\": 100,\"sort\": [{\"LevelItem\": \"desc\"}]}}`\r\n        })\r\n            .then(response => {\r\n                return response.json()\r\n            })\r\n            .then(data => {\r\n                // console.log('recipe response', data);\r\n                this.setState(prevState => ({\r\n                    specificLoaded: prevState.specificLoaded + 100,\r\n                    specificTotal: data.Pagination.ResultsTotal,\r\n                    recipe: [\r\n                        ...prevState.recipe,\r\n                        ...data.Results\r\n                    ]\r\n                }));\r\n                if (this.state.specificLoaded < data.Pagination.ResultsTotal) {\r\n                    setTimeout(this.FetchRecipes(), 200);\r\n                }\r\n                else {\r\n                    this.FormatRecipes()\r\n                }\r\n            });\r\n    }\r\n\r\n    FormatRecipes() {\r\n\r\n        var recipe = this.state.recipe;\r\n        for (var i = 0; i < recipe.length; i++) {\r\n            recipe[i][\"ItemID\"] = recipe[i][\"ID\"];\r\n            delete recipe[i][\"ID\"];\r\n            let craftClass = '';\r\n            let craftLvl;\r\n            if (recipe[i].Recipes) {\r\n                let classes = [];\r\n                let lvl = [];\r\n                for (var j = 0; j < recipe[i].Recipes.length; j++) {\r\n                    classes.push(this.GetClass(recipe[i].Recipes[j].ClassJobID));\r\n                    lvl.push(recipe[i].Recipes[j].Level);\r\n                }\r\n                craftClass = classes.join(', ');\r\n                craftLvl = Math.min(lvl);\r\n            }\r\n            recipe[i].Crafters = craftClass;\r\n            recipe[i].CraftLvl = craftLvl;\r\n            delete recipe[i][\"Recipes\"];\r\n        }\r\n\r\n        this.setState({\r\n            recipe: recipe\r\n        });\r\n\r\n        this.MergeRecipes();\r\n    }\r\n\r\n    MergeRecipes() {\r\n        var items = this.state.items;\r\n        var recipe = this.state.recipe;\r\n\r\n        let merged = [];\r\n        for (let i = 0; i < items.length; i++) {\r\n            merged.push({\r\n                ...items[i],\r\n                ...(recipe.find((itmInner) => itmInner.ItemID === items[i].ItemID))\r\n            }\r\n            );\r\n        }\r\n\r\n        console.log('post merge', merged);\r\n\r\n        this.setState(prevState => ({\r\n            items: merged,\r\n            recipe:[]\r\n        }));\r\n    }\r\n\r\n    GetClass(id) {\r\n        if (id === null) {\r\n            return '';\r\n        }\r\n        var result = this.state.classJobs.find(obj => {\r\n            return obj.ID === id;\r\n        })\r\n        return this.toTitleCase(result.Name);\r\n    }\r\n\r\n    GetRarity(id) {\r\n        switch (id) {\r\n            case 1: return 'Common'\r\n            case 2: return 'Uncommon'\r\n            case 3: return 'Rare'\r\n            case 4: return 'Relic'\r\n            case 7: return 'Aetherial'\r\n            default: return 'Common'\r\n        }\r\n    }\r\n\r\n    toTitleCase(str) {\r\n        return str.replace(/\\w\\S*/g, function (txt) {\r\n            return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <AppContext.Provider value={{\r\n                classJobs: this.state.classJobs,\r\n                data: this.state.data,\r\n                items: this.state.items,\r\n                recipe: this.state.recipe,\r\n                loadPercent: this.state.loadPercent,\r\n                specificLoaded: this.state.specificLoaded,\r\n                specificTotal: this.state.specificTotal,\r\n                actions: {}\r\n            }}>\r\n                {this.props.children}\r\n            </AppContext.Provider>\r\n        );\r\n    }\r\n}\r\nexport const Consumer = AppContext.Consumer;","import React from 'react';\r\nimport { Consumer } from './Context';\r\nimport ReactTable from 'react-table';\r\nimport '../css/react-table.css';\r\n\r\nconst ItemList = () => {\r\n\r\n\r\n    return (\r\n        <Consumer>\r\n            {context => {\r\n                const oneWeekAgo = new Date();\r\n                oneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\r\n\r\n                const columns = [{\r\n                    Header: 'Item ID',\r\n                    accessor: 'ItemID',\r\n                    show: false\r\n                }, {\r\n                    Header: 'Rarity',\r\n                    accessor: 'Rarity',\r\n                    className: 'rarity',\r\n                    show: false\r\n                }, {\r\n                    Header: 'Item Name',\r\n                    accessor: 'Item.Name',\r\n                    className: 'item-name',\r\n                    sortable: true,\r\n                    filterable: true,\r\n                    filterMethod: (filter, row) => {\r\n                        if (filter.value === '') { return true }\r\n                        if (row[filter.id].toUpperCase().includes(filter.value.toUpperCase())) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                }, {\r\n                    Header: 'Lowest Price',\r\n                    accessor: 'MinPrice',\r\n                    className: 'number-table',\r\n                    sortable: true,\r\n                    width: 120,\r\n                    Cell: props => new Intl.NumberFormat().format(props.value)\r\n                }, {\r\n                    Header: 'Qty',\r\n                    accessor: 'MinPriceQuantity',\r\n                    className: 'number-table',\r\n                    sortable: true,\r\n                    width: 45,\r\n                    Cell: props => new Intl.NumberFormat().format(props.value)\r\n                }, {\r\n                    Header: 'Lowest HQ',\r\n                    accessor: 'MinPriceHQ',\r\n                    className: 'number-table',\r\n                    sortable: true,\r\n                    width: 120,\r\n                    Cell: props => new Intl.NumberFormat().format(props.value)\r\n                }, {\r\n                    Header: 'Gil L/W',\r\n                    accessor: 'LastWeekGil',\r\n                    className: 'number-table',\r\n                    sortable: true,\r\n                    width: 120,\r\n                    Cell: props => new Intl.NumberFormat().format(props.value),\r\n                    filterable: true,\r\n                    filterMethod: (filter, row) => {\r\n                        console.log(row[filter.id], '>=', parseInt(filter.value), '=', row[filter.id] >= parseInt(filter.value));\r\n                        if (filter.value === '') { return true }\r\n                        if (row[filter.id] >= parseInt(filter.value)) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                }, {\r\n                    Header: 'Qty L/W',\r\n                    accessor: 'LastWeekQuantity',\r\n                    className: 'number-table',\r\n                    sortable: true,\r\n                    width: 90,\r\n                    Cell: props => new Intl.NumberFormat().format(props.value),\r\n                    filterable: true,\r\n                    filterMethod: (filter, row) => {\r\n                        if (filter.value === '') { return true }\r\n                        if (row[filter.id] <= filter.value) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                }, {\r\n                    Header: 'Transactions L/W',\r\n                    accessor: 'LastWeekTransactions',\r\n                    className: 'number-table',\r\n                    sortable: true,\r\n                    width: 155,\r\n                    Cell: props => new Intl.NumberFormat().format(props.value),\r\n                    filterable: true,\r\n                    filterMethod: (filter, row) => {\r\n                        if (filter.value === '') { return true }\r\n                        if (row[filter.id] >= parseInt(filter.value)) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                }\r\n                ]\r\n\r\n                if ((context.loadPercent === 100) && (context.specificLoaded >= context.specificTotal)) {\r\n                    columns.push({\r\n                        Header: 'Crafters',\r\n                        accessor: 'Crafters',\r\n                        sortable: true,\r\n                        width: 215,\r\n                        filterable: true,\r\n                        filterMethod: (filter, row) => {\r\n                            if (filter.value === '') { return true }\r\n                            else if (row[filter.id] === undefined || row[filter.id] === null) { return false }\r\n                            else if (row[filter.id].toUpperCase().includes(filter.value.toUpperCase())) {\r\n                                return true;\r\n                            }\r\n                        }\r\n                    });\r\n                    columns.push({\r\n                        Header: 'Lvl',\r\n                        accessor: 'CraftLvl',\r\n                        className: 'number-table',\r\n                        sortable: true,\r\n                        width: 45,\r\n                        Cell: props => new Intl.NumberFormat().format(props.value),\r\n                        filterable: true,\r\n                        filterMethod: (filter, row) => {\r\n                            // console.log('filter', filter);\r\n                            // console.log('row[filter.id]', row[filter.id]);\r\n                            if (filter.value === '') { return true }\r\n                            if (row[filter.id] <= filter.value) {\r\n                                return true;\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n                return (\r\n                    <ReactTable className=\"dark -striped -highlight\"\r\n                        data={context.items}\r\n                        columns={columns}\r\n                        pageSizeOptions={[10, 25, 50, 100]}\r\n                        defaultPageSize={25}\r\n                        getTrProps={(state, rowInfo, column) => {\r\n                            return {\r\n                                className: `rarity-${rowInfo.row.Rarity}`\r\n                            }\r\n                        }}\r\n                    />\r\n                );\r\n            }}\r\n        </Consumer>\r\n    );\r\n}\r\n\r\nexport default ItemList;","import Spinner from 'react-spinner-material';\r\nimport React, { Component } from 'react';\r\nimport { Consumer } from './Context';\r\n\r\nexport default class Loading extends Component {\r\n    render() {\r\n        return (\r\n            <Consumer>\r\n                {context => {\r\n                    return (\r\n                        <div className=\"loading-div\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-2\"></div>\r\n                                <div className=\"col center\">\r\n                                    <h1>Data is being fetched from the server</h1>\r\n                                </div>\r\n                                <div className=\"col-2\"></div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col\"></div>\r\n                                <div className=\"col-3 center\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col\"></div>\r\n                                        <div className=\"col\">\r\n                                            <Spinner size={150} spinnerColor={\"#333\"} spinnerWidth={15} visible={true} /></div>\r\n                                        <div className=\"col\"></div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col\"></div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col\"></div>\r\n                                <div className=\"col center\">\r\n                                    <h2>{(context.loadPercent).toFixed(1)}%</h2>\r\n                                </div>\r\n                                <div className=\"col\"></div>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                }}\r\n            </Consumer>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport ItemList from './ItemList';\r\nimport Loading from './Loading';\r\nimport { Consumer } from './Context';\r\n\r\n\r\nclass Marketboard extends Component {\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n  render() {\r\n\r\n    let page;\r\n    let specifics;\r\n\r\n    if (this.props.loadPercent < 100) {\r\n      page = <Loading />\r\n    }\r\n    else {\r\n      page = <ItemList />\r\n    }\r\n\r\n    return (\r\n      <Consumer>\r\n        {context => {\r\n          if ((context.loadPercent === 100) && (context.specificLoaded < context.specificTotal)) {\r\n            specifics =\r\n              <div className=\"row\">\r\n                <div className=\"col\"></div>\r\n                <div className=\"col\">Loading Crafters</div>\r\n                <div className=\"col\">{((context.specificLoaded / context.specificTotal) * 100).toFixed(1)}%</div>\r\n              </div>\r\n          }\r\n          else {\r\n            specifics = <div></div>\r\n          }\r\n          return (\r\n            <div className=\"main-content home\">\r\n              <div className=\"row\">\r\n                <div className=\"col\"></div>\r\n                <div className=\"col\"><h2>Currently only working on Goblin</h2></div>\r\n                <div className=\"col\"></div>\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\"col\">\r\n                  <p><strong>Item name</strong> search box is case insensitive</p>\r\n                </div>\r\n                <div className=\"col\">\r\n                  <p><strong>Gil made Last Week</strong> search box is for gil <strong>greater than or equal to</strong> the provided value</p>\r\n                </div>\r\n                <div className=\"col\">\r\n                  <p><strong>Units Sold Last Week</strong> search box is for units <strong>less than or equal to</strong> the provided value</p>\r\n                </div>\r\n                <div className=\"col\">\r\n                  <p><strong>Transactions Last Week</strong> search box is for transactions <strong>greater than or equal to</strong> the provided value</p>\r\n                </div>\r\n              </div>\r\n              <hr />\r\n              {specifics}\r\n              {page}\r\n            </div>\r\n          )\r\n        }}\r\n      </Consumer>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Marketboard;","import React, { Component } from 'react';\r\nimport {\r\n  HashRouter,\r\n  Route,\r\n  Switch\r\n} from 'react-router-dom';\r\n//App componentes\r\nimport Header from './Header';\r\nimport Gathering from './Gathering';\r\nimport Crafting from './Crafting';\r\nimport About from './About';\r\nimport NotFound from './NotFound';\r\nimport Marketboard from './Marketboard';\r\nimport { Consumer } from './Context';\r\n\r\n\r\nclass App extends Component {\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {context => {\r\n          return (\r\n            <HashRouter>\r\n              <div className=\"container\">\r\n                <Header />\r\n                <Switch>\r\n                  <Route exact path=\"/\" render={() => <Marketboard loadPercent={context.loadPercent}/>} />\r\n                  <Route path=\"/gathering\" render={() => <Gathering title='Gathering' />} />\r\n                  <Route exact path=\"/crafting\" component={Crafting} />\r\n                  <Route exact path=\"/about\" component={About} />\r\n                  <Route component={NotFound} />\r\n                </Switch>\r\n              </div>\r\n            </HashRouter>\r\n          );\r\n        }}\r\n\r\n      </Consumer>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport { Provider } from './components/Context';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './css/index.css';\r\nReactDOM.render(\r\n  <Provider>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}